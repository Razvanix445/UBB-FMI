/*
Un client trimite unui server un sir de caractere si un caracter.
Serverul va returna clientului toate pozitiile pe care caracterul
primit se regaseste in sir.
*/

#include <sys/types.h>
#include <sys/socket.h>
#include <stdio.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>
#include <arpa/inet.h>
#include <unistd.h>


int main(int argc, char *argv[]) {
  int c;
  struct sockaddr_in server;
  char sirDeCaractere[1024];
  char caracter;

  //if (argc == 2) {
      //printf("IP-ul este %s\n, iar portul este %s\n", argv[1], argv[2]);
  //}

  c = socket(AF_INET, SOCK_STREAM, 0);
  if (c < 0) {
    printf("Eroare la crearea socketului client\n");
    return 1;
  }

  memset(&server, 0, sizeof(server));
  server.sin_port = htons(atoi(argv[1]));
  server.sin_family = AF_INET;
  server.sin_addr.s_addr = inet_addr(argv[2]);

  if (connect(c, (struct sockaddr *) &server, sizeof(server)) < 0) {
    printf("Eroare la conectarea la server\n");
    return 1;
  }

  printf("Introduceti sirul de caractere: ");
  fgets(sirDeCaractere, sizeof(sirDeCaractere), stdin);
  //scanf("%s", text);
  printf("Introduceti caracterul cautat: ");
  scanf("%c", &caracter);
  send(c, sirDeCaractere, sizeof(sirDeCaractere), 0);
  send(c, &caracter, sizeof(caracter), 0);
  //printf("Am trimis sirul de caractere la server: %s\n", sirDeCaractere);
  //printf("Am trimis caracterul la server: %c\n", caracter);

  int numarPozitii;
  recv(c, &numarPozitii, sizeof(numarPozitii), MSG_WAITALL);
  if (numarPozitii > 0) {
    int pozitii[1024];
    recv(c, pozitii, sizeof(int) * numarPozitii, MSG_WAITALL);

    printf("Caracterul '%c' se gaseste la urmatoarele pozitii in text: ", caracter);
    for (int i = 0; i < numarPozitii; i++) {
      printf("%d ", pozitii[i]);
    }
    printf("\n");
  } else {
    printf("Caracterul '%c' nu a fost gasit in text.\n", caracter);
  }

  close(c);
}
